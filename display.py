import turtle

def update():
    turtle.update()

def resetFirst():
    turtle.tracer(0,0)
    turtle.speed(0)
    turtle.ht()
    turtle.pu()

def reset():
    turtle.clear()

def write(x, y, size, text):
    turtle.color("white")
    turtle.fillcolor("white")
    turtle.pu()
    turtle.goto(x,y)
    turtle.write(text,False,align="center",font=("Helvetica 97 Cond Black Oblique",size))

def draw(x, y, size, card):
    if card[0] == 0:
        colour = "red"
    elif card[0] == 1:
        colour = "#ffd633"  #yellow
    elif card[0] == 2:
        colour = "#0099ff"  #blue
    elif card[0] == 3:
        colour = "#008000"  #green
    else:
        colour = "white"
    try:
        card[1] =  int(card[1])
        numberCard(x, y, size, colour, card[1]) 
    except:
        if card[1] == "d":
            draw2Card(x, y, size, colour)
        elif card[1] == "s":
            skipCard(x, y, size, colour)
        elif card[1] == "r":
            reverseCard(x, y, size, colour)
        elif card[1] == "w":
            wildCard(x, y, size, colour)
        elif card[1] == "f":
            draw4Card(x, y, size, colour)
        else:
            unoCard(x, y, size)

def outline(x, y, size, colour):
    global defaultSize
    turtle.fillcolor(colour)
    turtle.goto(x,y)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.left(90)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size) / 8)
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        for i in range(6):
            turtle.fd((defaultSize[0] * size) / 8)
        turtle.circle(-((defaultSize[0] * size) / 8),90)
        for i in range(10):
            turtle.fd((defaultSize[1] * size) / 12)
        turtle.circle(-((defaultSize[0] * size) / 8),90)
    turtle.end_fill()
    turtle.seth(180)
    turtle.pu()
    turtle.fd((defaultSize[0] * size) / 8)
    turtle.seth(0)

def createCard(x, y, size, colour, colour2):
    global defaultSize
    turtle.color("white")
    outline(x, y, size, "white")
    size = size * 0.9
    outline(x, y, size, colour)
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/4)
    turtle.pd()
    turtle.fillcolor(colour2)
    turtle.color(colour2)
    turtle.begin_fill() 
    turtle.fd((defaultSize[1] * size)/16)
    turtle.circle(-80 * size,45)
    turtle.circle(-60 * size,45)
    turtle.circle(-14.2 * size,90)
    turtle.fd((defaultSize[1] * size)/8)
    turtle.circle(-80 * size,45)
    turtle.circle(-60 * size,45)
    turtle.circle(-14.2 * size,90)
    turtle.end_fill()
    turtle.pu()

def numberCard(x, y, size, colour, number):
    global defaultSize
    createCard(x,y,size,colour,"white")
    turtle.goto(x,y)  
    turtle.seth(270)
    turtle.fd(39 * size)
    turtle.right(90)
    turtle.fd(3 * size)
    turtle.fillcolor("black")
    turtle.color("black")
    fontSize = round(48 * size)
    turtle.write(str(number),False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize + (2*size)),"italic","bold"))
    turtle.fillcolor(colour)
    turtle.fd(size)
    turtle.seth(90)
    turtle.fd(2 * size)
    turtle.color(colour)
    turtle.write(str(number),False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize),"italic","bold"))
    turtle.color("white")
    turtle.fillcolor("white")
    turtle.goto(x,y)
    turtle.seth(180)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd(((defaultSize[0] * size)/4) + (8 * size))
    turtle.seth(0)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    fontSize = round(12 * size)
    turtle.write(str(number),False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize),"italic","bold"))
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(90)
    turtle.fd(((defaultSize[0] * size)/4) - (11 * size))
    turtle.seth(180)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    turtle.write(str(number),False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize),"italic","bold"))
    turtle.pu()

def draw2Card(x, y, size, colour):
    global defaultSize
    createCard(x, y, size, colour,"white")
    turtle.color("black")
    size = size * 0.9
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/5)
    turtle.seth(180)
    size = size / 0.9
    turtle.fd(size*9)
    for i in range(2):
        turtle.pd()
        turtle.fillcolor("black")
        turtle.begin_fill()
        for i in range(2):
            turtle.fd(size*20)
            turtle.left(66)
            turtle.fd(size*41)
            turtle.left(114)
        turtle.end_fill()
        turtle.pu()
        turtle.fd(size)
        turtle.pd()
        turtle.fillcolor("white")
        turtle.begin_fill()
        for i in range(2):
            turtle.fd(size*20)
            turtle.left(66)
            turtle.fd(size*40)
            turtle.left(114)
        turtle.end_fill()
        turtle.pu()
        turtle.fd(size * 2)
        turtle.left(66)
        turtle.fd(size * 2)
        turtle.left(294)
        turtle.pd()
        turtle.fillcolor(colour)
        turtle.begin_fill()
        for i in range(2):
            turtle.fd(size*16)
            turtle.left(66)
            turtle.fd(size*36)
            turtle.left(114)
        turtle.end_fill()
        turtle.pu()
        turtle.left(66)
        turtle.fd(size*20)
        turtle.right(66)
        turtle.fd(size*7)
    turtle.goto(x,y)
    turtle.color("white")
    turtle.fillcolor("white")
    turtle.seth(180)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd(((defaultSize[0] * size)/4) + (5 * size))
    turtle.seth(0)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    fontSize = round(10 * size)
    turtle.write("+2",False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize),"italic","bold"))
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(90)
    turtle.fd(((defaultSize[0] * size)/4) - (10 * size))
    turtle.seth(180)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    turtle.write("+2",False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize),"italic","bold"))
    turtle.pu()
    
def skipCard(x, y, size, colour):
    global defaultSize
    createCard(x, y, size, colour,"white")
    turtle.color("black")
    size = size * 0.9
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/4)
    turtle.seth(180)
    size = size / 0.9
    turtle.fd(size*37)
    turtle.left(90)
    turtle.fd(size*5.5)
    turtle.seth(0)
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(-19.5*size)
    turtle.end_fill()
    turtle.pu()
    turtle.seth(90)
    turtle.fd(0.5*size)
    turtle.seth(0)
    turtle.fd(1*size)
    turtle.seth(270)
    turtle.color(colour)
    turtle.fillcolor(colour)
    turtle.fd(size)
    turtle.right(90)
    turtle.fd(size)
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(19*size,360)
    turtle.end_fill()
    turtle.pu()
    turtle.seth(270)
    turtle.color("black")
    turtle.fillcolor("white")
    turtle.fd(size*5)
    turtle.seth(180)
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(13.5*size,360)
    turtle.end_fill()
    turtle.pu()
    turtle.circle(13.5*size,125)
    turtle.fd(3*size)
    turtle.left(90)
    turtle.pd()
    turtle.fillcolor(colour)
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*27)
        turtle.left(90)
        turtle.fd(size*6)
        turtle.left(90)
    turtle.end_fill()
    turtle.left(90)
    turtle.color(colour)
    for i in range(2):
        turtle.fd(size*6)
        turtle.pu()
        turtle.right(90)
        turtle.fd(size*27)
        turtle.right(90)
        turtle.pd()
    turtle.pu()
    turtle.goto(x,y)
    turtle.color("black")
    turtle.fillcolor("white")
    turtle.seth(180)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd(((defaultSize[0] * size)/4) + (3 * size))
    turtle.seth(0)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(5*size,360)
    turtle.end_fill()
    turtle.pu()
    turtle.left(90)
    turtle.fd(size*2)
    turtle.right(90)
    turtle.fillcolor(colour)
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(3*size,360)
    turtle.end_fill()
    turtle.pu()
    turtle.circle(3*size,125)
    turtle.fillcolor("white")
    turtle.fd((2/3)*size)
    turtle.left(90)
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*6)
        turtle.left(90)
        turtle.fd(size*(4/3))
        turtle.left(90)
    turtle.end_fill()
    turtle.left(90)
    turtle.color("white")
    for i in range(2):
        turtle.fd(size*(4/3))
        turtle.pu()
        turtle.right(90)
        turtle.fd(size*6)
        turtle.right(90)
        turtle.pd()
    turtle.pu()
    turtle.color("black")
    turtle.fillcolor("white")
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(90)
    turtle.fd(((defaultSize[0] * size)/4) + (2 * size))
    turtle.seth(180)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(5*size,360)
    turtle.end_fill()
    turtle.pu()
    turtle.left(90)
    turtle.fd(size*2)
    turtle.right(90)
    turtle.fillcolor(colour)
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(3*size,360)
    turtle.end_fill()
    turtle.pu()
    turtle.circle(3*size,125)
    turtle.fillcolor("white")
    turtle.fd((2/3)*size)
    turtle.left(90)
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*6)
        turtle.left(90)
        turtle.fd(size*(4/3))
        turtle.left(90)
    turtle.end_fill()
    turtle.left(90)
    turtle.color("white")
    for i in range(2):
        turtle.fd(size*(4/3))
        turtle.pu()
        turtle.right(90)
        turtle.fd(size*6)
        turtle.right(90)
        turtle.pd()
    turtle.pu()
    turtle.color("black")

def reverseCard(x, y, size, colour):
    global defaultSize
    createCard(x, y, size, colour,"white")
    turtle.color("black")
    turtle.fillcolor("black")
    turtle.goto(x,y)
    for i in range(2):
        turtle.seth(220)
        turtle.fd(size*8)
        turtle.seth(40)
        turtle.pd()
        turtle.begin_fill()
        turtle.fd(size*24)
        turtle.right(90)
        turtle.fd(7*size)
        turtle.left(135)
        turtle.fd(18*size)
        turtle.left(90)
        turtle.fd(18*size)
        turtle.left(135)
        turtle.fd(7*size)
        turtle.right(90)
        turtle.fd(size*12)
        turtle.circle(12*size,90)
        turtle.end_fill()
        turtle.pu()
        turtle.color(colour)
        turtle.fillcolor(colour)
        turtle.goto(x - 1.5*size,y + 1.5*size)
    turtle.color("black")
    turtle.fillcolor("black")
    turtle.goto(x+(1.5*size),y-(1.5*size))
    for i in range(2):
        turtle.seth(40)
        turtle.fd(size*8)
        turtle.seth(220)
        turtle.pd()
        turtle.begin_fill()
        turtle.fd(size*24)
        turtle.right(90)
        turtle.fd(7*size)
        turtle.left(135)
        turtle.fd(18*size)
        turtle.left(90)
        turtle.fd(18*size)
        turtle.left(135)
        turtle.fd(7*size)
        turtle.right(90)
        turtle.fd(size*12)
        turtle.circle(12*size,90)
        turtle.end_fill()
        turtle.pu()
        turtle.color(colour)
        turtle.fillcolor(colour)
        turtle.goto(x+0.5*size,y+0.5*size)
    turtle.goto(x,y)
    turtle.color("black")
    turtle.fillcolor("white")
    turtle.seth(180)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    turtle.seth(0)
    turtle.fd(((defaultSize[0] * size)/4) - (8 * size))
    size = size / 5
    x2,y2 = turtle.xcor(),turtle.ycor()
    turtle.color("black")
    turtle.fillcolor("black")
    turtle.goto(x2,y2)
    for i in range(2):
        turtle.seth(220)
        turtle.fd(size*8)
        turtle.seth(40)
        turtle.pd()
        turtle.begin_fill()
        turtle.fd(size*24)
        turtle.right(90)
        turtle.fd(7*size)
        turtle.left(135)
        turtle.fd(18*size)
        turtle.left(90)
        turtle.fd(18*size)
        turtle.left(135)
        turtle.fd(7*size)
        turtle.right(90)
        turtle.fd(size*12)
        turtle.circle(12*size,90)
        turtle.end_fill()
        turtle.pu()
        turtle.fillcolor("white")
        turtle.goto(x2 - 1.5*size,y2 + 1.5*size)
    turtle.color("black")
    turtle.fillcolor("black")
    turtle.goto(x2+(1.5*size),y2-(1.5*size))
    for i in range(2):
        turtle.seth(40)
        turtle.fd(size*8)
        turtle.seth(220)
        turtle.pd()
        turtle.begin_fill()
        turtle.fd(size*24)
        turtle.right(90)
        turtle.fd(7*size)
        turtle.left(135)
        turtle.fd(18*size)
        turtle.left(90)
        turtle.fd(18*size)
        turtle.left(135)
        turtle.fd(7*size)
        turtle.right(90)
        turtle.fd(size*12)
        turtle.circle(12*size,90)
        turtle.end_fill()
        turtle.pu()
        turtle.fillcolor("white")
        turtle.goto(x2+0.5*size,y2+0.5*size)
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(90)
    turtle.fd(((defaultSize[0] * size)/4) - (185 * size))
    turtle.seth(180)
    turtle.fd(((defaultSize[0] * size)/4) - (118 * size))
    x2,y2 = turtle.xcor(),turtle.ycor()
    turtle.color("black")
    turtle.fillcolor("black")
    turtle.goto(x2,y2)
    for i in range(2):
        turtle.seth(220)
        turtle.fd(size*8)
        turtle.seth(40)
        turtle.pd()
        turtle.begin_fill()
        turtle.fd(size*24)
        turtle.right(90)
        turtle.fd(7*size)
        turtle.left(135)
        turtle.fd(18*size)
        turtle.left(90)
        turtle.fd(18*size)
        turtle.left(135)
        turtle.fd(7*size)
        turtle.right(90)
        turtle.fd(size*12)
        turtle.circle(12*size,90)
        turtle.end_fill()
        turtle.pu()
        turtle.fillcolor("white")
        turtle.goto(x2 - 1.5*size,y2 + 1.5*size)
    turtle.color("black")
    turtle.fillcolor("black")
    turtle.goto(x2+(1.5*size),y2-(1.5*size))
    for i in range(2):
        turtle.seth(40)
        turtle.fd(size*8)
        turtle.seth(220)
        turtle.pd()
        turtle.begin_fill()
        turtle.fd(size*24)
        turtle.right(90)
        turtle.fd(7*size)
        turtle.left(135)
        turtle.fd(18*size)
        turtle.left(90)
        turtle.fd(18*size)
        turtle.left(135)
        turtle.fd(7*size)
        turtle.right(90)
        turtle.fd(size*12)
        turtle.circle(12*size,90)
        turtle.end_fill()
        turtle.pu()
        turtle.fillcolor("white")
        turtle.goto(x2+0.5*size,y2+0.5*size)
        turtle.pu()

def wildCard(x, y, size, colour):
    global defaultSize
    createCard(x, y, size, "black","white")
    size = size*0.8
    turtle.color("black")
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd(40*size)
    turtle.seth(90)
    turtle.fd(size*30)
    turtle.seth(270)
    turtle.pd()
    turtle.fillcolor("red")
    turtle.color("red")
    turtle.begin_fill() 
    turtle.fd((defaultSize[1] * size)/16)
    turtle.circle(-80 * size,45)
    turtle.circle(-60 * size,45)
    turtle.circle(-14.2 * size,90)
    turtle.fd((defaultSize[1] * size)/8)
    turtle.circle(-80 * size,45)
    turtle.circle(-60 * size,45)
    turtle.circle(-14.2 * size,90)
    turtle.end_fill()
    turtle.pu()
    turtle.goto(x,y)
    turtle.color("#ffd633")
    turtle.fillcolor("#ffd633")
    turtle.seth(90)
    turtle.right(20)
    turtle.begin_fill()
    turtle.pd()
    turtle.fd(size*55)
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd(size*36.7)
    turtle.left(70)
    turtle.circle(90*size,20)
    turtle.circle(30*size,30)
    turtle.circle(15*size,70)
    turtle.fd(10*size)
    turtle.end_fill()
    turtle.color("#008000")
    turtle.fillcolor("#008000")
    turtle.begin_fill()
    turtle.circle(56*size,50)
    turtle.circle(180*size,8.55)
    turtle.left(111)
    turtle.fd(size*37.8)
    turtle.end_fill()
    turtle.seth(0)
    turtle.right(105)
    turtle.color("#0099ff")
    turtle.fillcolor("#0099ff")
    turtle.begin_fill()
    turtle.fd(51.8*size)
    turtle.right(67)
    turtle.fd(10*size)
    turtle.circle(-17*size,100)
    turtle.fd(10*size)
    turtle.right(5)
    turtle.fd(size*10)
    turtle.right(6)
    turtle.fd(size*2)
    turtle.fd(size*12.5)
    turtle.seth(0)
    turtle.fd(size*38)
    turtle.end_fill()
    turtle.pu()
    turtle.goto(x,y)
    turtle.color("black")
    turtle.fillcolor(colour)
    turtle.seth(180)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd(((defaultSize[0] * size)/4) - (10 * size))
    turtle.seth(0)
    turtle.fd(((defaultSize[0] * size)/4) - (13 * size))
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(5*size,360)
    turtle.end_fill()
    turtle.pu()
    turtle.color("black")
    turtle.fillcolor(colour)
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(90)
    turtle.fd(((defaultSize[0] * size)/4) - (10 * size))
    turtle.seth(180)
    turtle.fd(((defaultSize[0] * size)/4) - (13 * size))
    turtle.pd()
    turtle.begin_fill()
    turtle.circle(5*size,360)
    turtle.end_fill()
    turtle.pu()

def draw4Card(x, y, size, colour):
    global defaultSize
    createCard(x, y, size, "black","white")
    size = size*0.8
    turtle.color("black")
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd(37*size)
    turtle.seth(90)
    turtle.fd(size*30.5)
    turtle.seth(270)
    turtle.fd(size*5)
    turtle.seth(180)
    size = (size/0.8) * 0.85
    turtle.pd()
    turtle.fillcolor("black")
    for i in range(2):
        xg,yg = turtle.xcor(),turtle.ycor()
        turtle.begin_fill()
        turtle.left(66)
        turtle.fd(size*41)
        turtle.right(66)
        turtle.fd(size*10)
        xy,yy = turtle.xcor(),turtle.ycor()
        turtle.left(66)
        turtle.fd((4/6) * size*41)
        turtle.right(66)
        turtle.fd(size*20)
        turtle.right(114)
        turtle.fd((2/6) * size*41)
        turtle.seth(180)
        turtle.fd((4/5) * size*20)
        turtle.right(114)
        turtle.fd(size*41)
        turtle.right(66)
        xr,yr = turtle.xcor(),turtle.ycor()
        turtle.fd(10*size)
        turtle.left(66)
        turtle.fd((4/6) * size*41)
        turtle.right(66)
        turtle.fd(size*20)
        xb,yb = turtle.xcor(),turtle.ycor()
        turtle.right(114)
        turtle.fd((2/6) * size*41)
        turtle.seth(0)
        turtle.fd((4/5) * size*20)
        turtle.pu()
        turtle.end_fill()
        turtle.seth(90)
        turtle.fd(0.5*size)
        turtle.seth(180)
        turtle.fd(0.5*size)
        turtle.pd()
        turtle.fillcolor("white")
    turtle.pu()
    turtle.goto(xy,yy)
    turtle.color("#ffd633")
    turtle.fillcolor("#ffd633")
    turtle.seth(66)
    turtle.fd((2/6) * size*41)
    turtle.seth(270)
    turtle.fd(size * 1.5)
    turtle.seth(180)
    turtle.fd(size*2)
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*17)
        turtle.left(66)
        turtle.fd(size*38)
        turtle.left(114)
    turtle.end_fill()
    turtle.pu()
    turtle.goto(xg,yg)
    turtle.seth(246)
    turtle.color("black")
    turtle.fillcolor("white")
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*41)
        turtle.right(66)
        turtle.fd(size*20)
        turtle.right(114)
    turtle.pu()
    turtle.end_fill()
    turtle.seth(270)
    turtle.fd(size * 1.5)
    turtle.seth(180)
    turtle.fd(size*2)
    turtle.color("#008000")
    turtle.fillcolor("#008000")
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*17)
        turtle.left(66)
        turtle.fd(size*38)
        turtle.left(114)
    turtle.end_fill()
    turtle.pu()
    turtle.goto(xb,yb)
    turtle.seth(246)
    turtle.color("black")
    turtle.fillcolor("white")
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*41)
        turtle.right(66)
        turtle.fd(size*20)
        turtle.right(114)
    turtle.pu()
    turtle.end_fill()
    turtle.seth(270)
    turtle.fd(size * 1.5)
    turtle.seth(180)
    turtle.fd(size*2)
    turtle.color("#0099ff")
    turtle.fillcolor("#0099ff")
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*17)
        turtle.left(66)
        turtle.fd(size*38)
        turtle.left(114)
    turtle.end_fill()
    turtle.pu()
    turtle.goto(xr + (size*20),yr)
    turtle.seth(246)
    turtle.color("black")
    turtle.fillcolor("white")
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*41)
        turtle.right(66)
        turtle.fd(size*20)
        turtle.right(114)
    turtle.pu()
    turtle.end_fill()
    turtle.seth(270)
    turtle.fd(size * 1.5)
    turtle.seth(180)
    turtle.fd(size*2)
    turtle.color("red")
    turtle.fillcolor("red")
    turtle.pd()
    turtle.begin_fill()
    for i in range(2):
        turtle.fd(size*17)
        turtle.left(66)
        turtle.fd(size*38)
        turtle.left(114)
    turtle.end_fill()
    turtle.pu()
    turtle.goto(x,y)
    turtle.color(colour)
    turtle.fillcolor(colour)
    turtle.seth(180)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(90)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(270)
    turtle.fd(((defaultSize[0] * size)/4) - (5 * size))
    turtle.seth(0)
    turtle.fd(((defaultSize[0] * size)/4) - (10 * size))
    fontSize = round(10 * size)
    turtle.write("+4",False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize),"italic","bold"))
    turtle.goto(x,y)
    turtle.seth(0)
    turtle.fd((defaultSize[0] * size)/2)
    turtle.seth(270)
    turtle.fd((defaultSize[1] * size)/2)
    turtle.seth(90)
    turtle.fd(((defaultSize[0] * size)/4) - (20 * size))
    turtle.seth(180)
    turtle.fd(((defaultSize[0] * size)/4) - (8 * size))
    turtle.write("+4",False,align="center",font=("Helvetica 97 Cond Black Oblique",int(fontSize),"italic","bold"))
    turtle.pu()

def unoCard(x, y, size):
    global defaultSize
    createCard(x, y, size, "black","red")
    turtle.color("black")
    turtle.fillcolor("blue")
    turtle.goto(x,y)
    turtle.fd(size*20)
    turtle.right(90)
    turtle.fd(size*25)
    turtle.right(110)
    turtle.fd(size*7)
    turtle.seth(180)
    turtle.fd(size*5.5)
    fontSize = round(size*18)
    turtle.write("UNO",False,align="left",font=("Ariel Bold",int(fontSize),"bold"))
    turtle.seth(270)
    turtle.fd(size*1)
    turtle.left(90)
    turtle.fd(1*size)
    turtle.color("skyblue")
    turtle.write("UNO",False,align="left",font=("Ariel Bold",int(fontSize),"bold"))
    turtle.seth(270)
    turtle.fd(size*1)
    turtle.left(90)
    turtle.fd(1*size)
    turtle.color("yellow")
    turtle.write("UNO",False,align="left",font=("Ariel Bold",int(fontSize),"bold"))
    turtle.pu()

defaultSize = [80,120]
resetFirst()
turtle.bgcolor("grey")
